name: Python Tests

# Déclencheurs : à chaque push ou pull request sur la branche main
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Définir les jobs à exécuter
jobs:

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12' # Choisissez la version de Python que vous utilisez

    # Étape 3: Installer les dépendances (Black et Ruff)
    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install black ruff

    # Étape 4: Exécuter isort
    - name: Run isort
      run: |
        source venv/bin/activate
        isort . --profile=black --check-only

    # Étape 5: Exécuter Black (vérification de formatage)
    - name: Run Black (check)
      run: |
        source venv/bin/activate
        black --check --line-length=120 .

    # Étape 6: Exécuter Ruff (analyse statique)
    - name: Run Ruff
      run: |
        source venv/bin/activate
        ruff check .

  test:
    # Le job s'exécute sur une machine virtuelle Ubuntu
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12' # Choisissez la version de Python que vous utilisez
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        PYTHONPATH='.'
        pytest

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Set up Docker Buildx (for multi-platform builds, optional)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    # Build the Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/appli-transport:latest