name: Python Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  checkout:
    runs-on: ubuntu-latest
    outputs:
      # On définit un output qui correspond au chemin du code source
      repo-path: ${{ steps.checkout-code.outputs.repo-path }}

    steps:
      - name: Checkout code
        id: checkout-code  # ID pour référencer les outputs
        uses: actions/checkout@v4

      - name: Set repository path output
        id: set-repo-path
        run: echo "::set-output name=repo-path::$(pwd)"
        # Crée un output "repo-path" contenant le chemin du répertoire courant

  setup-python:
    runs-on: ubuntu-latest
    needs: checkout
    outputs:
      python-path: ${{ steps.python-setup.outputs.python-path }}

    steps:
      - name: Set up Python
        id: python-setup
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ needs.checkout.outputs.repo-path }}/requirements.txt
        # Utilisation de l'output "repo-path" pour localiser le fichier requirements.txt

  lint:
    runs-on: ubuntu-latest
    needs: setup-python

    steps:
      - name: Lint with flake8
        run: |
          flake8 ${{ needs.setup-python.outputs.python-path }} --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 ${{ needs.setup-python.outputs.python-path }} --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        # Utilisation de l'output "repo-path" pour indiquer le chemin du code à lint

  test:
    runs-on: ubuntu-latest
    needs: setup-python

    steps:
      - name: Run tests
        run: |
          pytest ${{ needs.setup-python.outputs.python-path }}
        # Utilisation de l'output "repo-path" pour indiquer le chemin du code à tester